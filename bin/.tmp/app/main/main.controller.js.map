{"version":3,"sources":["app/main/main.controller.js"],"names":[],"mappings":"AAAA;;;;;;AAEA,CAAC,YAAW;AAAA,MAEJ,cAFI;AAIR,4BAAY,KAAZ,EAAmB,QAAnB,EAA6B;AAAA;;AAC3B,WAAK,KAAL,GAAa,KAAb;AACA,WAAK,QAAL,GAAgB,QAAhB;AACA,WAAK,IAAL,GAAY,EAAZ;AACD;;AARO;AAAA;AAAA,gCAUE;AACR,YAAI,UAAU;AACZ,oBAAU,IAAI,SAAS,aAAb,CAA2B;AACnC,kBAAM,EAAC,MAAM,mBAAP,EAA4B,UAAS,EAArC;AAD6B,WAA3B;AADE,SAAd;;AAMA,iBAAS,WAAT,GAAuB,wEAAvB;AACA,YAAI,MAAM,IAAI,SAAS,GAAb,CAAiB;AACzB,qBAAW,KADc;AAEzB,iBAAO,uDAFkB;AAGzB,kBAAQ,CAAC,CAAC,WAAF,EAAe,WAAf,CAHiB;AAIzB,gBAAM;AAJmB,SAAjB,CAAV;;AAOA,YAAI,EAAJ,CAAO,YAAP,EAAqB,YAAY;AAC/B,cAAI,SAAJ,CAAc,UAAd,EAA0B,QAAQ,QAAlC;AACA,cAAI,QAAJ,CAAa;AACX,kBAAM,UADK;AAEX,oBAAQ,QAFG;;AAIX,sBAAU,UAJC;AAKX,2BAAe,IALJ;AAMX,sBAAU;AACN,4BAAc,QADR;AAEN,oCAAsB;AAFhB;AANC,WAAb;AAsBD,SAxBD;;;;AA4BA,YAAI,EAAJ,CAAO,OAAP,EAAgB,UAAU,CAAV,EAAa;AACzB,cAAI,UAAJ,CAAe,EAAE,KAAjB,EAAwB,EAAC,OAAO,UAAR,EAAoB,QAAQ,CAA5B,EAA+B,iBAAiB,IAAhD,EAAxB,EAA+E,UAAU,GAAV,EAAe,UAAf,EAA2B;AACtG,gBAAI,OAAO,CAAC,WAAW,MAAvB,EACI;;AAEJ,gBAAI,WAAW,WAAW,CAAX,CAAf;;;AAGA,oBAAQ,GAAR,CAAY,QAAZ;;;;AAIH,WAXD;AAYH,SAbD;;;AAgBJ,YAAI,EAAJ,CAAO,WAAP,EAAoB,UAAU,CAAV,EAAa;AAC7B,cAAI,UAAJ,CAAe,EAAE,KAAjB,EAAwB,EAAC,OAAO,UAAR,EAAoB,QAAQ,CAA5B,EAAxB,EAAwD,UAAU,GAAV,EAAe,QAAf,EAAyB;AAC7E,gBAAI,SAAJ,GAAgB,KAAhB,CAAsB,MAAtB,GAAgC,CAAC,GAAD,IAAQ,SAAS,MAAlB,GAA4B,SAA5B,GAAwC,EAAvE;AACH,WAFD;AAGH,SAJD;;AAOI,aAAK,QAAL,CAAc,IAAd,GAAqB,IAArB,CAA0B,UAAU,QAAV,EAAoB;AAC5C,kBAAQ,QAAR,CAAiB,OAAjB,CAAyB,SAAS,IAAlC;AACD,SAFD,EAEG,UAAU,KAAV,EAAiB;AAChB,kBAAQ,GAAR,CAAY,gBAAZ;AACH,SAJD;AAKD;AAjFO;;AAAA;AAAA;;AAoFV,UAAQ,MAAR,CAAe,uBAAf,EACG,SADH,CACa,MADb,EACqB;AACjB,iBAAa,oBADI;AAEjB,gBAAY;AAFK,GADrB;AAKD,CAzFD","file":"app/main/main.controller.js","sourcesContent":["'use strict';\n\n(function() {\n\n  class MainController {\n\n    constructor($http, airports) {\n      this.$http = $http;\n      this.airports = airports;\n      this.apts = [];\n    }\n\n    $onInit() {\n      var sources = {\n        airports: new mapboxgl.GeoJSONSource({\n          data: {type: 'FeatureCollection', features:[]}\n        })\n      };\n\n      mapboxgl.accessToken = 'pk.eyJ1IjoiYnJlbnRsZW1vbnMiLCJhIjoiOWxVeThWbyJ9.iGiQ6rMvAjDXVpyzjRabSg';\n      var map = new mapboxgl.Map({\n        container: 'map',\n        style: 'mapbox://styles/brentlemons/ciqd5imkt0001d1ngbqqzf1bh',\n        center: [-98.58333333, 39.83333333],\n        zoom: 3\n      });\n      \n      map.on('style.load', function () {\n        map.addSource('airports', sources.airports);\n        map.addLayer({\n          'id': 'airports',\n          'type': 'symbol',\n          // 'type': 'circle',\n          'source': 'airports',\n          'interactive': true,\n          'layout': {\n              'icon-image': '{icon}',\n              'icon-allow-overlap': true,\n              // 'icon-ignore-placement': true,\n              // 'text-field': '{id}',\n              // 'text-optional': true,\n              // 'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],\n              // 'text-offset': [0, 0.6],\n              // 'text-anchor': 'top'\n          // },\n          // 'paint': {\n          //     'circle-radius': 6,\n          //     'circle-color': '#f00',\n          //     'circle-opacity': 0.4\n          }\n        });\n      });\n\n      // When a click event occurs near a marker icon, open a popup at the location of\n      // the feature, with description HTML from its properties.\n      map.on('click', function (e) {\n          map.featuresAt(e.point, {layer: 'airports', radius: 6, includeGeometry: true}, function (err, facilities) {\n              if (err || !facilities.length)\n                  return;\n\n              var facility = facilities[0];\n              // $scope.selectedFacility = facility;\n\n              console.log(facility);\n              // facilityClick(facility);\n\n              // open_this(facility);\n          });\n      });\n  // Use the same approach as above to indicate that the symbols are clickable\n  // by changing the cursor style to 'pointer'.\n  map.on('mousemove', function (e) {\n      map.featuresAt(e.point, {layer: 'airports', radius: 6}, function (err, features) {\n          map.getCanvas().style.cursor = (!err && features.length) ? 'pointer' : '';\n      });\n  });\n\n\n      this.airports.list().then(function (airports) {\n        sources.airports.setData(airports.data);\n      }, function (error) {\n          console.log('airports error');\n      });\n    }\n  }\n\n  angular.module('mapboxAviationDemoApp')\n    .component('main', {\n      templateUrl: 'app/main/main.html',\n      controller: MainController\n    });\n})();\n"],"sourceRoot":"/source/"}